<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ale.shirojwtdemo.dao.UserDao">

    <resultMap id="baseResultMap" type="com.ale.shirojwtdemo.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="BIGINT"/>
        <result column="headimgurl" property="headimgurl" jdbcType="VARCHAR"/>
        <result column="birthday" property="birthday"/>
        <result column="createtime" property="createtime"/>
        <result column="updatetime" property="updatetime"/>
        <result column="salt" property="salt" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,username,password,nickname,headimgurl,sex,birthday,phone,email,createtime,updatetime,salt,status
    </sql>

    <sql id="Save_Base_Column_List">
        username,password,nickname,headimgurl,sex,birthday,phone,email,createtime,updatetime,salt,status
    </sql>

    <sql id="where">
        <where>
            <if test="params != null and params !=''">
                <if test="params.username != null and params.username != ''">
                    and t.username like concat('%', #{params.username}, '%')
                </if>
                <if test="params.nickname != null and params.nickname != ''">
                    and t.nickname like concat('%', #{params.nickname}, '%')
                </if>
                <if test="params.status != null and params.status != ''">
                    and t.status = #{params.status}
                </if>
            </if>
        </where>
    </sql>

    <select id="count" resultType="int">
        select count(1) from user t
        <include refid="where"/>
    </select>

    <select id="list" resultType="User">
		select * from user t
		limit #{param1}, #{param2}
	</select>

    <update id="update" parameterType="User">
        update user t
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="nickname != null">
                nickname = #{nickname},
            </if>
            <if test="headimgurl != null">
                headimgurl = #{headimgurl},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            updateTime = #{updatetime}
        </set>
        where t.id = #{id}
    </update>

    <select id="findById" resultType="User" parameterType="java.lang.Integer">
        select <include refid="Base_Column_List"/> from user
        <where>
            <if test="id!=null">
              id = #{id,jdbcType=INTEGER}
            </if>
        </where>
    </select>

    <select id="findByUserName" resultType="User" parameterType="java.lang.String">
        select <include refid="Base_Column_List"/> from user where 1=1
        <if test="username!=null">
            and username = #{username,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="findByEmail" resultType="User" parameterType="java.lang.String">
        select <include refid="Base_Column_List"/> from user where 1=1
        <if test="email!=null">
            and email = #{email}
        </if>
    </select>

    <insert id="save"  parameterType="User" >
        insert into user(<include refid="Save_Base_Column_List"/>) values
         (#{user.username},#{user.password},#{user.nickname},#{user.headimgurl},#{user.sex}
        ,#{user.birthday},#{user.phone},#{user.email},#{user.createtime},#{user.updatetime},#{user.salt},#{user.status})
    </insert>

    <insert id="batchSave"  parameterType="java.util.List" >
        insert into user(<include refid="Save_Base_Column_List"/>) values
        <foreach collection="userList" item="user" separator="," index="index">
            (#{user.username,jdbcType.VARCHAR},#{user.password,jdbcType.VARCHAR},#{user.nickname,jdbcType.VARCHAR},#{user.headimgurl,jdbcType.VARCHAR},#{user.sex,jdbcType.INTEGER}
            ,#{user.birthday,jdbcType.IIME},#{user.phone,jdbcType.VARCHAR},#{user.email,jdbcType.VARCHAR},#{user.createtime,jdbcType.IIME},#{user.updatetime,jdbcType.TIME},#{user.salt,jdbcType.VARCHAR},#{user.status,jdbcType.INTEGER})
        </foreach>
    </insert>

    <select id="getRoles" resultType="Role">
        select r.* from user u,role r,user_role ur where u.id = ur.userid and r.id=ur.roleid and r.status=1 and u.id = #{userid}
    </select>

    <insert id="saveUserRoles">
        insert into user_role(roleId, userId) values
        <foreach collection="roleList" item="role" separator=",">
            (#{role.id}, #{userid})
        </foreach>
    </insert>

    <select id="getPermissions" resultType="Permission">
        select p.* from role r,role_permission rp,permission p,user_role ur
        where r.id=rp.roleid and rp.permissionid=p.id and ur.roleid=r.id and ur.userid=#{userid}
    </select>


</mapper>